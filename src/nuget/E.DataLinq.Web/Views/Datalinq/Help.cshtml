@using E.DataLinq.Core
@model E.DataLinq.Web.Models.HelpModel
@inject E.DataLinq.Core.Services.Abstraction.IHostUrlHelper HostUrlHelper

@{
    ViewBag.Title = "Help";
    Layout = "~/Views/Shared/_Layout_empty-datalinq.cshtml";
}

@{
    var currentLang = Model.SelectedLanguage ?? "en";
}

 <script src="@(ViewData["contentRootUrl"])/js/datalinq.help.js"></script>

<style>
    td {
        border: 1px solid #d4d4d4;
    }

    .header-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header-container h2 {
        margin: 0;
    }

    .language-selector {
        margin-left: 10px; 
    }

    .language-selector select {
        font-size: 14px;
        padding: 5px;
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        border-radius: 5px;
        cursor: pointer;
    }

    .language-selector select:focus {
        outline: none;
        border-color: #007bff;
    }

</style>

<link href="@(ViewData["contentRootUrl"])/css/datalinq/help.css?@(DataLinqVersion.CssVersion)" rel="stylesheet" />

@if (String.IsNullOrWhiteSpace(Model.Selected))
{
    <div class="header-container">
        <h2>DataLinq</h2>
        <div class="language-selector">
            <select id="languageSelector" onchange="changeLanguage(this)">
                <option value="en" @(currentLang == "en" ? "selected" : "")>EN</option>
                <option value="de" @(currentLang == "de" ? "selected" : "")>DE</option>
            </select>
        </div>
    </div>
    <br />

    <input type='text' class='content-search' placeholder='Search...' />

    foreach (var classHelp in Model.Classes)
    {
        <h3>@classHelp.Name Klasse</h3>
        <p class="searchable-content">
            @classHelp.Description
        </p>

        <h4>Methods</h4>
        <table width="100%">
            @foreach (var methodName in classHelp.MethodNames.OrderBy(m => m))
            {
                var method = classHelp.Methods.Where(m => m.Name == methodName).FirstOrDefault();
                if (!String.IsNullOrWhiteSpace(method.Description))
                {
                    <tr class="searchable-content">
                        <td>
                            <a href="help?selected=@(classHelp.Name + "." + methodName)&lang=@currentLang">@methodName</a>
                        </td>
                        <td>
                            <p>@method.Description.Split('.')[0]</p>
                        </td>
                    </tr>
                }
            }
        </table>

        @if (classHelp.ExtensionMethodNames.Count > 0)
        {
            <br />
            <br />
            <h4>Extended Methods</h4>
            <table width="100%">
                @foreach (var methodName in classHelp.ExtensionMethodNames.OrderBy(m => m))
                {
                    var method = classHelp.ExtensionMethods.Where(m => m.Name == methodName).FirstOrDefault();
                    if (!String.IsNullOrWhiteSpace(method.Description))
                    {
                        <tr class="searchable-content">
                            <td>
                                <a href="help?selected=@(classHelp.Name + "." + methodName)&lang=@currentLang">@methodName</a>
                            </td>
                            <td>
                                <p>@method.Description.Split('.')[0]</p>
                            </td>
                        </tr>
                    }
                }
            </table>
        }
    }
}
else
{
    <a href="@(HostUrlHelper.HostAppRootUrl())/datalinq/help?lang=@currentLang">&lt;&lt; All Methods</a>

    <h1>@Model.Selected</h1>

    var helpClass = Model.Classes.Where(c => c.Name == Model.Selected.Split('.')[0]).FirstOrDefault();

    @Html.Raw(helpClass.ToHtmlString(Model.Selected.Split('.')[1]))
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var storedLang = sessionStorage.getItem("selectedLang");
        var currentLang = document.getElementById("languageSelector").value;

        if (storedLang && storedLang !== currentLang) {
            document.getElementById("languageSelector").value = storedLang;
            var url = new URL(window.location.href);
            url.searchParams.set("lang", storedLang);
            window.location.href = url.toString();
        }
    });

    function changeLanguage(select) {
        var selectedLang = select.value;
        sessionStorage.setItem("selectedLang", selectedLang);
        var url = new URL(window.location.href);
        url.searchParams.set("lang", selectedLang);
        window.location.href = url.toString();
    }
</script>

