{"id":"datalinq-helper-openviewindialog","name":null,"description":null,"code":"<div class=\"navbar\">\r\n  <div class=\"title\" id=\"function-title\"><a href=\"https://localhost:7277/datalinq/report/datalinq-guide@select-all-users@index\">DataLinq-Helper: OpenViewInDialog</a></div>\r\n  <div style=\"width: 30px;\"></div> \r\n</div>\r\n\r\n<div class=\"wrapper\">\r\n\r\n<button class=\"collapsible\">\r\n<span class=\"collapsible-label\">Basic Usag</span>\r\n<span class=\"collapsible-actions\">\r\n<span class=\"action-button\" onclick=\"openPopup(event, 'openViewInDialog_basic')\">Code/Query</span>\r\n</span>\r\n</button>\r\n<div class=\"content\">\r\n    @DLH.OpenViewInDialog(id: \"datalinq-guide@select-assetcount@table-assetcount\", parameter: \"\")\r\n</div>\r\n<div id=\"description_openViewInDialog_basic\" hidden>\r\nde: OpenViewInDialog erstellt einen Button, der beim Klicken eine angegebene Ansicht in einem Modal-Fenster öffnet. \r\nen: OpenViewInDialog creates a button that opens a specified view in a modal dialog when clicked in the current view. \r\n</div>\r\n<div id=\"csharp_openViewInDialog_basic\" hidden><script type=\"text/plain\">@@DLH.OpenViewInDialog(id: \"datalinq-guide@select-assetcount@table-assetcount\", parameter: \"\")</script></div>\r\n<div id=\"sql_openViewInDialog_basic\" hidden>\r\nSELECT AssetName, COUNT(*) as AssetCount\r\nFROM assets\r\nWHERE 0=0\r\nGROUP BY AssetName\r\n</div>\r\n\r\n<button class=\"collapsible\">\r\n<span class=\"collapsible-label\">With parameter for query</span>\r\n<span class=\"collapsible-actions\">\r\n<span class=\"action-button\" onclick=\"openPopup(event, 'openViewInDialog_parameter')\">Code/Query</span>\r\n</span>\r\n</button>\r\n<div class=\"content\">\r\n    @DLH.OpenViewInDialog(id: \"datalinq-guide@select-assetcount@table-assetcount\", parameter: new { AssetName=\"Galaxy S20\" })\r\n</div>\r\n<div id=\"description_openViewInDialog_parameter\" hidden>\r\nde:Der Parameter kann zusätzliche Informationen oder Filter für die angezeigte Ansicht enthalten.\r\nen:The parameter can include additional information or filters for the displayed view.\r\n</div>\r\n<div id=\"csharp_openViewInDialog_parameter\" hidden><script type=\"text/plain\">@@DLH.OpenViewInDialog(id: \"datalinq-guide@select-assetcount@table-assetcount\", parameter: new { AssetName=\"Galaxy S20\" })\r\n</script></div>\r\n<div id=\"sql_openViewInDialog_parameter\" hidden>\r\nSELECT AssetName, COUNT(*) as AssetCount\r\nFROM assets\r\nWHERE 0=0\r\n\r\n#if AssetName\r\n    AND AssetName = @@AssetName\r\n#endif\r\n\r\nGROUP BY AssetName\r\n</div>\r\n\r\n<button class=\"collapsible\">\r\n<span class=\"collapsible-label\">With button text</span>\r\n<span class=\"collapsible-actions\">\r\n<span class=\"action-button\" onclick=\"openPopup(event, 'openViewInDialog_buttonText')\">Code/Query</span>\r\n</span>\r\n</button>\r\n<div class=\"content\">\r\n    @DLH.OpenViewInDialog(id: \"datalinq-guide@select-assetcount@table-assetcount\", parameter: new { AssetName=\"Galaxy S20\" }, buttonText: \"Open dialog\")\r\n</div>\r\n<div id=\"description_openViewInDialog_buttonText\" hidden>\r\nde: 'buttonText' erlaubt es den Text des Buttons anzupassen.\r\nen: 'buttonText' specifies the text of the created Button.\r\n</div>\r\n<div id=\"csharp_openViewInDialog_buttonText\" hidden><script type=\"text/plain\">@@DLH.OpenViewInDialog(id: \"datalinq-guide@select-assetcount@table-assetcount\", parameter: new { AssetName=\"Galaxy S20\" }, buttonText: \"Open dialog\")</script></div>\r\n<div id=\"sql_openViewInDialog_buttonText\" hidden>\r\nSELECT AssetName, COUNT(*) as AssetCount\r\nFROM assets\r\nWHERE 0=0\r\n\r\n#if AssetName\r\n    AND AssetName = @@AssetName\r\n#endif\r\n\r\nGROUP BY AssetName    \r\n</div>\r\n\r\n<button class=\"collapsible\">\r\n<span class=\"collapsible-label\">With HTML Attributes for dialog</span>\r\n<span class=\"collapsible-actions\">\r\n<span class=\"action-button\" onclick=\"openPopup(event, 'openViewInDialog_htmlAttributes')\">Code/Query</span>\r\n</span>\r\n</button>\r\n<div class=\"content\">\r\n    @DLH.OpenViewInDialog(id: \"datalinq-guide@select-assetcount@table-assetcount\", parameter: new { AssetName=\"Galaxy S20\" }, buttonText: \"Open dialog\", dialogAttributes: new { dialogWidth = \"500px\", dialogHeight = \"500px\",\r\n        dialogTitle = \"Title for this dialog!\" })\r\n</div>\r\n<div id=\"description_openViewInDialog_htmlAttributes\" hidden>\r\nde:dialogAttributes ermöglicht es, zusätzliche Attribute für das Modal-Dialogfeld festzulegen. In diesem Fall sind die folgenden Eigenschaften gesetzt:\r\n - dialogWidth: Gibt die Breite des Dialogs an (hier \"500px\").\r\n - dialogHeight: Gibt die Höhe des Dialogs an (hier \"500px\").\r\n - dialogTitle: Setzt den Titel des Dialogs (hier \"Title for this dialog!\").\r\nDiese Attribute beeinflussen das Erscheinungsbild und das Verhalten des modalen Dialogs, wenn er geöffnet wird.\r\n\r\nen:dialogAttributes allows you to set additional attributes for the modal dialog. In this case, the following properties are set:\r\n - dialogWidth: Specifies the width of the dialog (here \"500px\").\r\n - dialogHeight: Specifies the height of the dialog (here \"500px\").\r\n - dialogTitle: Sets the title of the dialog (here \"Title for this dialog!\").\r\nThese attributes affect the appearance and behavior of the modal dialog when it is opened.\r\n</div>\r\n<div id=\"csharp_openViewInDialog_htmlAttributes\" hidden><script type=\"text/plain\">@@DLH.OpenViewInDialog(id: \"datalinq-guide@select-assetcount@table-assetcount\", parameter: new { AssetName=\"Galaxy S20\" }, buttonText: \"Open dialog\", dialogAttributes: new { dialogWidth = \"500px\", dialogHeight = \"500px\",\r\n        dialogTitle = \"Title for this dialog!\" })</script></div>\r\n<div id=\"sql_openViewInDialog_htmlAttributes\" hidden>\r\nSELECT AssetName, COUNT(*) as AssetCount\r\nFROM assets\r\nWHERE 0=0\r\n\r\n#if AssetName\r\n    AND AssetName = @@AssetName\r\n#endif\r\n\r\nGROUP BY AssetName\r\n</div>\r\n\r\n</div>","created":"2025-04-15T09:04:54","changed":"2025-05-09T07:02:25.9885325Z","test_parameters":null,"included_js_libs":"legacy_chartjs"}