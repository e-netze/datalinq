{"id":"datalinq-helper-refreshticker","name":null,"description":null,"code":"<div class=\"navbar\">\r\n  <div class=\"title\" id=\"function-title\"><a href=\"https://localhost:7277/datalinq/report/datalinq-guide@select-all-users@index\">DataLinq-Helper: RefreshViewTicker</a></div>\r\n  <div style=\"width: 30px;\"></div> \r\n</div>\r\n\r\n<div class=\"wrapper\">\r\n\r\n<button class=\"collapsible\">\r\n<span class=\"collapsible-label\">Basic Usage</span>\r\n<span class=\"collapsible-actions\">\r\n<span class=\"action-button\" onclick=\"openPopup(event, 'refreshTicker_basic')\">Code/Query</span>\r\n</span>\r\n</button>\r\n<div class=\"content\">\r\n    @DLH.RefreshViewTicker()\r\n    <div id=\"basicUsage\"></div>\r\n</div>\r\n<div id=\"description_refreshTicker_basic\" hidden>\r\nde:RefreshViewTicker() erstellt ein Element, das sich alle 15 Sekunden automatisch aktualisiert. Es kommt auch mit einem On/Off-Checkbox, mit dem der automatische Refresh aktiviert oder deaktiviert werden kann.\r\n\r\nen:RefreshViewTicker() creates an element that automatically refreshes every 15 seconds. It also comes with an On/Off checkbox to enable or disable the auto-refresh.\r\n</div>\r\n<div id=\"csharp_refreshTicker_basic\" hidden><script type=\"text/plain\">@@DLH.RefreshViewTicker()</script></div>\r\n<div id=\"sql_refreshTicker_basic\" hidden></div>\r\n\r\n<button class=\"collapsible\">\r\n<span class=\"collapsible-label\">With label and attributes</span>\r\n<span class=\"collapsible-actions\">\r\n<span class=\"action-button\" onclick=\"openPopup(event, 'refreshTicker_label')\">Code/Query</span>\r\n</span>\r\n</button>\r\n<div class=\"content\">\r\n    @DLH.RefreshViewTicker(label: \"Refresh in\", htmlAttributes: new { style = \"padding: 16px; background-color: #f1f5f9; border: 1px solid #cbd5e1; border-radius: 8px; margin-bottom: 16px;\" })\r\n    <div id=\"withLabelAndAttriutes\"></div>\r\n</div>\r\n<div id=\"description_refreshTicker_label\" hidden>\r\nde:Mit label kann der Text des Buttons festgelegt werden, und mit htmlAttributes können Stile für das Element definiert werden.\r\n\r\nen:The label specifies the text of the button, and htmlAttributes allow you to apply styles to the element.\r\n</div>\r\n<div id=\"csharp_refreshTicker_label\" hidden><script type=\"text/plain\">@@DLH.RefreshViewTicker(label: \"Refresh in\", htmlAttributes: new { style = \"padding: 16px; background-color: #f1f5f9; border: 1px solid #cbd5e1; border-radius: 8px; margin-bottom: 16px;\" })</script></div>\r\n<div id=\"sql_refreshTicker_label\" hidden></div>\r\n\r\n<button class=\"collapsible\">\r\n<span class=\"collapsible-label\">With specified time</span>\r\n<span class=\"collapsible-actions\">\r\n<span class=\"action-button\" onclick=\"openPopup(event, 'refreshTicker_time')\">Code/Query</span>\r\n</span>\r\n</button>\r\n<div class=\"content\">\r\n    @DLH.RefreshViewTicker(label: \"Refresh in\", seconds: 15, htmlAttributes: new { style = \"padding: 16px; background-color: #f1f5f9; border: 1px solid #cbd5e1; border-radius: 8px; margin-bottom: 16px;\" })\r\n    <div id=\"withSpecifiedTime\"></div>\r\n</div>\r\n<div id=\"description_refreshTicker_time\" hidden>\r\nde:Mit seconds kann die Zeit in Sekunden angegeben werden, nach der die automatische Aktualisierung erfolgt.\r\n\r\nen:The seconds specifies the time in seconds after which the refresh will occur.\r\n</div>\r\n<div id=\"csharp_refreshTicker_time\" hidden><script type=\"text/plain\">@@DLH.RefreshViewTicker(label: \"Refresh in\", seconds: 15, htmlAttributes: new { style = \"padding: 16px; background-color: #f1f5f9; border: 1px solid #cbd5e1; border-radius: 8px; margin-bottom: 16px;\" })</script></div>\r\n<div id=\"sql_refreshTicker_time\" hidden></div>\r\n\r\n<button class=\"collapsible\">\r\n<span class=\"collapsible-label\">Deactivated on startup</span>\r\n<span class=\"collapsible-actions\">\r\n<span class=\"action-button\" onclick=\"openPopup(event, 'refreshTicker_disabled')\">Code/Query</span>\r\n</span>\r\n</button>\r\n<div class=\"content\">\r\n    @DLH.RefreshViewTicker(label: \"Refresh in\", seconds: 15, htmlAttributes: new { style = \"padding: 16px; background-color: #f1f5f9; border: 1px solid #cbd5e1; border-radius: 8px; margin-bottom: 16px;\" }, isActive: false)\r\n    <div id=\"deactivated\"></div>\r\n</div>\r\n<div id=\"description_refreshTicker_disabled\" hidden>\r\nde: 'isActive' kann den Timer beim Starten der View deaktivieren.\r\nen: 'isActive' disables the timer on starup of the view.\r\n</div>\r\n<div id=\"csharp_refreshTicker_disabled\" hidden><script type=\"text/plain\">@@DLH.RefreshViewTicker(label: \"Refresh in\", seconds: 15, htmlAttributes: new { style = \"padding: 16px; background-color: #f1f5f9; border: 1px solid #cbd5e1; border-radius: 8px; margin-bottom: 16px;\" }, isActive: false)</script></div>\r\n<div id=\"sql_refreshTicker_disabled\" hidden></div>\r\n\r\n</div>\r\n\r\n<script>\r\n    setTimeout(function (){\r\n        document.getElementById(\"basicUsage\").textContent = \"Refresh to make me disappear again!\";\r\n        document.getElementById(\"withLabelAndAttriutes\").textContent = \"Refresh to make me disappear again!\";\r\n        document.getElementById(\"withSpecifiedTime\").textContent = \"Refresh to make me disappear again!\";\r\n        document.getElementById(\"deactivated\").textContent = \"Refresh to make me disappear again!\";\r\n    },5000);\r\n</script>","created":"2025-04-15T10:49:09","changed":"2025-05-09T07:16:59.9858217Z","test_parameters":null,"included_js_libs":"legacy_chartjs"}